#!/bin/bash
#
# For komodo based coins only. See cronsplit script
# Local split version by webworker01
# Original version by Decker (c) 2018 <https://github.com/DeckerSU/komodo_scripts/blob/master/split_nn_sapling.sh>
#
# Usage: ./splitfunds <COINNAME> <numutxos>
# e.g.   ./splitfunds KMD 50
#
# @author webworker01
# @author DeckerSU
#
scriptpath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source $scriptpath/main

#base58 decode by grondilu https://github.com/grondilu/bitcoin-bash-tools/blob/master/bitcoin.sh
declare -a base58=(
      1 2 3 4 5 6 7 8 9
    A B C D E F G H   J K L M N   P Q R S T U V W X Y Z
    a b c d e f g h i j k   m n o p q r s t u v w x y z
)
unset dcr; for i in {0..57}; do dcr+="${i}s${base58[i]}"; done
decodeBase58() {
    local line
    echo -n "$1" | sed -e's/^\(1*\).*/\1/' -e's/1/00/g' | tr -d '\n'
    dc -e "$dcr 16o0$(sed 's/./ 58*l&+/g' <<<$1)p" |
    while read line; do echo -n ${line/\\/}; done
}

if [[ ! -z $1 ]] && [[ ${1^^} != "KMD" ]]; then
    coin=${1^^}
    asset=" -ac_name=$1"
    feepkb=${sctxfeeperkb}
else
    coin="KMD"
    asset=""
    feepkb=${txfeeperkb}
fi

SPLIT_COUNT=$2
#Splits > 252 are not allowed
if [[ ! -z $SPLIT_COUNT ]] && (( SPLIT_COUNT > 252 )); then
    SPLIT_COUNT=252
elif [[ ! -z $SPLIT_COUNT ]] && (( SPLIT_COUNT > 0 )); then
    SPLIT_COUNT=$2
else
    #it wasn't a number, default to 50
    SPLIT_COUNT=50
fi

sapling=$(isSapling $coin)
SPLIT_VALUE=0.0001
SPLIT_VALUE_SATOSHI=10000
SPLIT_TOTAL=$(jq -n "$SPLIT_VALUE*$SPLIT_COUNT")

NN_PUBKEY=$($komodocli $asset validateaddress $nn_address | jq -r .pubkey)
nob58=$(decodeBase58 $nn_address)
NN_HASH160=$(echo ${nob58:2:-8})

#Get lowest amount and valid utxo to split
if [[ $coin != "VRSC" ]]; then
    utxo=$($komodocli $asset listunspent | jq -r --arg minsize $SPLIT_TOTAL '[.[] | select(.amount>($minsize|tonumber) and .generated==false and .rawconfirmations>0)] | sort_by(.amount)[0]')
else
    utxo=$($komodocli $asset listunspent | jq -r --arg minsize $SPLIT_TOTAL '[.[] | select(.amount>($minsize|tonumber) and .generated==false and .confirmations>0)] | sort_by(.amount)[0]')
fi

if [[ $utxo != "null" ]]; then

    txid=$(jq -r .txid <<< $utxo)
    vout=$(jq -r .vout <<< $utxo)
    amount=$(jq -r .amount <<< $utxo)

    rev_txid=$(dd conv=swab 2>/dev/null <<< $txid | rev)
    vout_hex=$(printf "%08x" $vout | dd conv=swab 2>/dev/null | rev)

    if (( sapling > 0 )); then
        rawtx="04000080" # tx version
        rawtx=$rawtx"85202f89" # versiongroupid
    else
        rawtx="01000000" # tx version
    fi

    rawtx=$rawtx"01" # number of inputs (1, as we take one utxo from listunspent)
    rawtx=$rawtx$rev_txid$vout_hex"00ffffffff"

    outputCount=$(printf "%02x" $((SPLIT_COUNT+1)) )
    rawtx=$rawtx$outputCount

    value=$(printf "%016x" $SPLIT_VALUE_SATOSHI | dd conv=swab 2>/dev/null | rev)
    outbits=$value"2321"$NN_PUBKEY"ac"
    outbits=$(eval printf "%0.s$outbits" {1..$SPLIT_COUNT})
    rawtx=$rawtx$outbits

    txfee=$(calcFee 1 $((SPLIT_COUNT+1)) "p2pkh" "p2pk" $feepkb)

    change=$( printf "%.8f" $(bc -l <<< "(${amount}-${SPLIT_TOTAL}-${txfee})") )
    change=$( sed 's/^0*//' <<< ${change//./} )
    change=$( printf "%016x" $change | dd conv=swab 2> /dev/null | rev )
    rawtx=$rawtx$change

    rawtx=$rawtx"1976a914"$NN_HASH160"88ac" # len OP_DUP OP_HASH160 len hash OP_EQUALVERIFY OP_CHECKSIG

    # nlocktime=$(printf "%08x" $(date +%s) | dd conv=swab 2> /dev/null | rev)
    nlocktime="00000000"
    rawtx=$rawtx$nlocktime

    if (( sapling > 0 )); then
        rawtx=$rawtx"000000000000000000000000000000" # sapling end of tx
    fi

    signedtx=$($komodocli $asset signrawtransaction $rawtx | jq -r '.hex')

    if [[ ! -z $signedtx ]]; then
        txid=$($komodocli $asset sendrawtransaction $signedtx)
        echo $txid
    else
        echo "Error! Failed signing tx :(("
    fi
else
  echo -e "Error! No UTXOs to split :(("
fi
