#!/bin/bash
#
# init for notary node required dependencies and repos
# setup config file first to indicate 1st or 3rd party server
# after setup you will still need to create wp_7776/wp_7779 file
#
# Usage: ./init <include any param value to run without sudo commands>
#
# @see https://docs.komodoplatform.com/notary/setup-Komodo-Notary-Node.html#create-wp-7776
# @author webworker01
#
set -e

scriptpath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source $scriptpath/main

if [[ ! -z $1 ]]; then
    usesudo=0
else
    usesudo=1
fi

if (( usesudo > 0 )); then
    log "init" "installing dependencies"
    #dependencies
    sudo apt-get update && sudo apt-get upgrade -y

    nntoolsinstall="jq bc dc htop"

    if (( thirdpartycoins > 0 )); then
        # install g++ 7 compiler for chips for now
        aptinstall="g++-9"
    fi

    boost_apt_version=$(apt show libboost-system-dev 2>/dev/null | grep Version | awk '{print $2}' | cut -d . -f -2)
    if (( $(echo "$boost_apt_version <= 1.71" | bc -l) )); then
        boostinstall="libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev"
    fi

    sudo apt-get install ${nntoolsinstall} ${aptinstall-} ${boostinstall-} libevent-dev build-essential pkg-config libc6-dev m4 g++-multilib \
        autoconf libtool ncurses-dev zlib1g-dev wget curl bsdmainutils automake cmake clang libsodium-dev libcurl4-gnutls-dev libssl-dev git unzip python python3 python3-zmq -y

    #nanomsg - for iguana
    if [[ ! -f "/usr/local/include/nanomsg/nn.h" ]]; then
        log "init" "installing nanomsg"
        cd $HOME
        git clone https://github.com/nanomsg/nanomsg
        cd nanomsg
        cmake . -DNN_TESTS=OFF -DNN_ENABLE_DOC=OFF
        make -j$(expr $(nproc) - 1)
        sudo make install
        sudo ldconfig
        cd $HOME
        rm -rf nanomsg
    else
        log "init" "/usr/local/include/nanomsg already exists, continuing..."
    fi
fi

#komodo
if [[ ! -d "$HOME/komodo" ]]; then
    log "init" "installing Komodo"
    cd $HOME
    git clone https://github.com/KomodoPlatform/komodo
    cd komodo
    $HOME/komodo/zcutil/fetch-params-alt.sh
    $scriptpath/build kmd

    if (( usesudo > 0 )); then
        sudo ln -sf /home/$USER/komodo/src/komodo-cli /usr/local/bin/komodo-cli
        sudo ln -sf /home/$USER/komodo/src/komodod /usr/local/bin/komodod
    fi

    #create komodo.conf
    randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
    randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

    if (( thirdpartycoins < 1 )); then
        blocknotify="blocknotify=$HOME/nntools/minerfixer %s"
    fi

    mkdir -p $HOME/.komodo
    cat <<EOF > $HOME/.komodo/komodo.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
rpcport=7771
$blocknotify
EOF
    chmod 600 $HOME/.komodo/komodo.conf

    echo "pubkey=$nn_pubkey" > $HOME/komodo/src/pubkey.txt
else
    log "init" "$HOME/komodo already exists, continuing..."
fi

#Iguana
if [[ ! -d "$HOME/dPoW" ]]; then
    log "init" "installing dPoW"
    cd $HOME
    git clone https://github.com/KomodoPlatform/dPoW -b master --single-branch
    cd dPoW
    # git checkout beta_season3
    echo "pubkey=$nn_pubkey" > $HOME/komodo/src/pubkey.txt
else
    log "init" "$HOME/dPoW already exists, continuing..."
fi

if (( thirdpartycoins < 1 )); then
    #litecoin
    if [[ ! -d "$HOME/litecoin" ]]; then
        log "init" "installing LTC"
        cd $HOME
        git clone https://github.com/litecoin-project/litecoin.git -b 0.16 --single-branch
        $scriptpath/build ltc

        #litecoin.conf
        randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

        mkdir -p $HOME/.litecoin
        cat <<EOF > $HOME/.litecoin/litecoin.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
rpcport=9332
listen=0
listenonion=0
onlynet=ipv4
# deprecatedrpc=estimatefee
# maxmempool=500
EOF
        chmod 600 $HOME/.litecoin/litecoin.conf
    else
        log "init" "$HOME/litecoin already exists, continuing..."
    fi

else
    #CHIPS
    if [[ ! -d "$HOME/chips" ]]; then
        log "init" "installing CHIPS"
        cd $HOME
        git clone https://github.com/chips-blockchain/chips.git
        cd chips
        git checkout 70362d
        $scriptpath/build chips

        #chips.conf
        randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

        mkdir -p $HOME/.chips
        cat <<EOF > $HOME/.chips/chips.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
deprecatedrpc=signrawtransaction
EOF
        chmod 600 $HOME/.chips/chips.conf
    else
        log "init" "$HOME/chips3 already exists, continuing..."
    fi

    #EMC2
    if [[ ! -d "$HOME/einsteinium" ]]; then
        log "init" "installing EMC2"
        cd $HOME
        git clone https://github.com/emc2foundation/einsteinium
        cd einsteinium
        git checkout a716ae8
        $scriptpath/build emc2

        #einsteinium.conf
        randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

        mkdir -p $HOME/.einsteinium
        cat <<EOF > $HOME/.einsteinium/einsteinium.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
listen=0
listenonion=0
onlynet=ipv4
EOF
        chmod 600 $HOME/.einsteinium/einsteinium.conf
    else
        log "init" "$HOME/einsteinium already exists, continuing..."
    fi

    #VRSC
    if [[ ! -d "$HOME/VerusCoin" ]]; then
        log "init" "installing VRSC"
        cd $HOME
        git clone https://github.com/VerusCoin/VerusCoin
        cd VerusCoin
        git checkout d0aecf8
        $scriptpath/build vrsc
    else
        log "init" "$HOME/VerusCoin already exists, continuing..."
    fi

    #AYA
    if [[ ! -d "$HOME/AYAv2" ]]; then
        log "init" "installing AYA"
        cd $HOME
        git clone https://github.com/KomodoPlatform/AYAv2
        cd AYAv2
        git checkout 02afeac
        $scriptpath/build aya

        #aryacoin.conf
        randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

        mkdir -p $HOME/.aryacoin
        cat <<EOF > $HOME/.aryacoin/aryacoin.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
litemode=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
listen=0
listenonion=0
onlynet=ipv4
maxconnections=8
EOF
        chmod 600 $HOME/.aryacoin/aryacoin.conf
    else
        log "init" "$HOME/AYAv2 already exists, continuing..."
    fi

    #Marmara
    if [[ ! -d "$HOME/marmara" ]]; then
        log "init" "installing MCL"
        cd $HOME
        git clone https://github.com/marmarachain/marmara.git
        cd marmara
        git checkout b288dfd
        $scriptpath/build mcl
    else
        log "init" "$HOME/marmara already exists, continuing..."
    fi

    #SFUSD
    if [[ ! -d "$HOME/sfusd-core" ]]; then
        log "init" "installing SFUSD"
        cd $HOME
        git clone https://github.com/pbcllc/sfusd-core.git
        cd sfusd-core
        git checkout d96497c
        $scriptpath/build sfusd

        #sfusd.conf
        randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        cd $HOME
        mkdir -p $HOME/.smartusd
        cat <<EOF > $HOME/.smartusd/smartusd.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
deprecatedrpc=signrawtransaction
listen=0
listenonion=0
onlynet=ipv4
EOF
        chmod 600 $HOME/.smartusd/smartusd.conf
    else
        log "init" "$HOME/sfusd-core already exists, continuing..."
    fi

    #TOKEL
    if [[ ! -d "$HOME/tokelkomodo" ]]; then
        log "init" "installing TOKEL"
        cd $HOME
        git clone https://github.com/komodoplatform/komodo -b tokel tokelkomodo
        cd tokelkomodo
        git checkout f39a088
        $scriptpath/build tokel
    else
        log "init" "$HOME/tokelkomodo already exists, continuing..."
    fi

    #MIL
    if [[ ! -d "$HOME/mil-1" ]]; then
        log "init" "installing MIL"
        cd $HOME
        git clone https://github.com/KomodoPlatform/mil-1
        cd mil-1
        git checkout 4fb0389
        $scriptpath/build mil

        #mil.conf
        randusername=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
        randpassword=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

        mkdir -p $HOME/.mil
        cat <<EOF > $HOME/.mil/mil.conf
rpcuser=user$randusername
rpcpassword=pass$randpassword
txindex=1
server=1
daemon=1
rpcworkqueue=256
rpcbind=127.0.0.1
rpcallowip=127.0.0.1
listen=0
listenonion=0
onlynet=ipv4
EOF
        chmod 600 $HOME/.mil/mil.conf
    else
        log "init" "$HOME/einsteinium already exists, continuing..."
    fi
fi

echo
echo "Done! You must create wp_7776 or wp_7779 file https://docs.komodoplatform.com/notary/setup-Komodo-Notary-Node.html#create-wp-7776 and import your private keys"
log "init" "init completed"
